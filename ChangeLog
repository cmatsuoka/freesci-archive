2000-04-22  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kgraphics.c (kCanBeHere): Fixed several bugs in CanBeHere().

	* src/core/scriptdebug.c (c_viewinfo): Minor fix to the viewinfo
	console command

	* src/core/kmath.c (kSinDiv): Fixed SinDiv and CosDiv to take their
	parameters in the correct order

	* src/core/simplesaid.c (simplesaid): Improved handling of bracketized
	expressions

2000-04-21  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/main.c (get_readline_input): Inputting C-D is now handled like
	entering "quit" when not using the OSD.

2000-04-19  Dmitry Jemerov  <yole@nnz.ru>

	* Some more build fixes. Hopefully everything is stable now.

2000-04-18  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/simplesaid.c (simplesaid): Fixed minor bug

2000-04-17  Dmitry Jemerov  <yole@nnz.ru>

	* Updated project files.

	* Converted freesci/Win32 to use dynamic linking. Made a lot of
	little changes all over the place.

	* src/tools/sciunpack.c: Brought back the changes lost because of
	Rink Springer's DOS port.

	* portable_howto.txt: New file.

2000-04-17  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/vocab.c (vocab_lookup_word): Fixed several bugs in extended
	(suffix-using) word lookup.

2000-04-16  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kgraphics.c (_k_make_view_list): Fixed the "out of hunk"
	problems once and for all (I hope) by keeping a copy of the underbits.

	* src/core/kscripts.c (kIsObject): Caught IsObject(0xffff), thus
	preventing an unaligned read.

	* src/core/scriptdebug.c (c_mem_info): Added hunk information to
	the meminfo console command

	* src/core/simplesaid.c: Implemented a simple and preliminary almost-
	Said() implementation that handles some of the basic expressions.

	* src/core/kstring.c (kParse): A pointer to the event passed to
	Parse() is now stored and later used in Said() to claim the event
	on matches.

2000-04-16  Lars Skovlund  <lskovlun@image.dk>

	* src/core/kgraphics.c (k_set_now_seen): Fixed warning messages caused
	  by my new code

2000-04-16  Lars Skovlund  <lskovlun@image.dk>

	* src/core/vocab_debug.c (vocabulary_get_knames1): Fixed kernel names
	  loading for Christmas Card 1990 (Season's Greetings)
	* src/core/kgraphics.c (kAnimate): Fixed problem with the main menu
	  in Hoyle's Book of Games.

2000-04-14  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/scriptdebug.c (c_sim_parse): Implemented a 'simparse'
	console command.

2000-04-14  Lars Skovlund  <lskovlun@image.dk>

	* src/core/graphics.c: Got rid of the KQ1 pic-related error messages

2000-04-13  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/vocab.c: Fixed compile problem caused by a new array.

	* src/core/kscripts.c (kDisposeClone): underBits are no longer freed
	automatically, as suggested by Lars. Stabilizes KQ1 and does not seem
	to harm any other games.

2000-04-13  Lars Skovlund  <lskovlun@image.dk>

	* src/tools/listwords.c: Added this nifty little program.

2000-04-12  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c: Took care of DoAvoider()

	* src/core/kgraphics.c (kSetNowSeen): Implemented SetNowSeen()

	* src/core/klists.c (kEmptyList): Implemented EmptyList()
	(kAddAfter): Implemented AddAfter()

2000-04-12  Dmitry Jemerov  <yole@nnz.ru>

	* The usual bunch of build problem fixes.
	* Updated project files according to latest changes in source code
        structure.

2000-04-11  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kgraphics.c (_k_draw_control): Frames are now drawn around
	all edit controls.

	* src/core/kgraphics.c (kCanBeHere): dynviews with IGNORE_ACTOR
	or DONT_RESTORE don't just actively ignore moving objects, they
	also are passively ignored now.

	* src/graphics/engine_graphics.c (graph_draw_selector_control):
	Savegame names are now drawn correctly (?) in the savegame selection
	lists. They aren't selectable yet, though.

2000-04-10  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/game.c (game_exit): Fixed restarting in KQ4 by resetting
	the list of installed scripts

	* doc/sci.sgml: Added BaseSetter(), MemInfo(), DirLoop() to the docs

2000-04-09  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/savegame.cfsml: Made sure synonyms are stored in
	savegames

	* src/core/kfile.c (kRestoreGame): Fixed some inconsistencies in
	savegame handling

	* src/core/vm.c (run_vm): Fixed several severe sign extension bugs

	* src/sound/soundserver_null.c (sound_null_server): Fixed a deadlock
	situation that could happen when a song finished playing

	* src/main.c (main): Added Rickard to the list of people mentioned in
	the startup message

	* src/core/vm.c (game_run): Fixed a bug that would cause several
	scripts to be allocated twice during startup (all scripts required
	by script 0, except for script 0 itself).

	* src/core/kgraphics.c (kAnimate): Fixed drawing of disposed views to
	occur before the 'normal' images retreive their background image. Took
	care of many visual problems in the KQ4 introduction.

2000-04-08  Christoph Reichenbach  <jameson@linuxgames.com>

	* acinclude.m4 (AC_PATH_GLX): Fixed incorrect handling of the X11
	header file -L instruction in cases where it's null

2000-03-25  Lars Skovlund  <lskovlun@image.dk>

	* src/core/kgraphics.c (kNewWindow): Bit 7 of the window flags wasn't
	  handled correctly. Fixed - this should take care of some of the
	  problems related to CB1 and Camelot box drawing
	* src/core/kgraphics.c (kGraph): Added an (incomplete) implementation
	  of KERNEL_GRAPH_REDRAW_BOX
	* src/core/scriptdebug.c (c_dynviews): Added dynviews console command

2000-03-18  Lars Skovlund  <lskovlun@image.dk>

	* Fixed priority drawing for Camelot

2000-03-07  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c (kGameIsRestarting): Fixed some problems with the
	restarting flags being set incorrectly

	* src/sound/soundserver_null.c: Sound server now checks for its parent
	process several times per second. This should get rid of the problem
	with sound server processes running amok after sciv dies.

	* src/core/game.c: Fixed some heap corruptions

	* src/core/vm.c (game_run): Added support for game restarts. First
	restarts (used in KQ4 to enter the actual game) appear to work nicely,
	normal restarts (F9) still need some fine tuning to prevent heap
	corruption.
	(PUT_HEAP): Added code to check for unaligned access

	* src/graphics/font.c (_draw_text0): Fixed problem with KQ4 using
	the newline character for the IV thingy in the title bar

2000-03-06  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/scriptdebug.c (c_mem_info): Added meminfo command

2000-02-13  Lars Skovlund  <lskovlun@image.dk>

	* Fixed the menubar bug (?).

2000-02-08  Christoph Reichenbach  <jameson@linuxgames.com>

	* Added several fixes and improvements that had been lost (!)

	* src/graphics/engine_graphics.c: Implemented additional checks.

2000-02-07  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kstring.c (kParse): Fixed a guaranteed segfault if
	vocab_tokenize_string() failed

2000-01-30  Lars Skovlund  <lskovlun@image.dk>

	* src/core/kgraphics.c: Implemented SetJump().

2000-01-28  Lars Skovlund  <lskovlun@image.dk>

	* src/core/ksound.c (kDoSound): kDoSound now returns immediately if we
	  are running an SCI01 game.

2000-01-25  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/sound/soundserver_null.c (sound_null_server): Fixed misc. seg-
	faults in the sound server (same for soundserver_dos, I hope)

	* src/graphics/con_io.c (con_input): Fixed ' ' not being treated

2000-01-13  Rickard Lind  <rpl@dd.chalmers.se>

	* src/sound/soundserver_null.c: Fixed a bug in the cumulative cue
 	system (also fixed soundserver_dos).


2000-01-09  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/sound/soundserver_dos.c (sound_dos_poll): Added support for the
	MIDI delay escape sequence

	* src/sound/soundserver_null.c (sound_null_server): Added support for
	the 0xf8 MIDI delay escape sequence

2000-01-04  Christoph Reichenbach  <jameson@Linuxgames.com>

	* Included Rink's DOS port. Haven't checked it, though.

	* contrib/midi.c: Newer version of Rickard's midi.c

1999-12-29  Christoph Reichenbach  <jameson@linuxgames.com>

	* contrib/midi.c: Added Rickard's midi.c

1999-12-22  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kfile.c (kRestoreGame): Implemented RestoreGame(). Fixed
	some related bugs. Saving/Restoring still doesn't work cleanly, but
	it's slowly getting better.

	* src/include/soundserver.h (SOUND_SERVER_TIMEOUT): Increased sound
	timeout by 4900%. Restoring appears to take more than 2 ms on my box...

	* src/core/cfsml.pl (create_string_functions): Fixed a bug that would
	allocate one byte too few.

1999-12-21  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kfile.c (kCheckSaveGame): Implemented CheckSaveGame()
	(kSaveGame): Implemented SaveGame()

	* src/main.c (main): Added check for graphics driver- abort if none is
	present.

1999-12-19  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/said.y (main): First implementation of the Said grammar
	* Fixed said implementation

1999-12-18  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/graphics/engine_graphics.c (graph_draw_selector_icon): Fixed
	some of the view offset bugs

	* src/core/kgraphics.c (kDisposeWindow): After disposing the active
	port, that port's predecessor is set. Fixes a bug that would appear
	if several windows were overlaid.

	* src/graphics/font.c (get_text_size): Fixed bug that would add an
	extra line if the end of line was reached simultaneously with a
	newline character

	* src/core/kmenu.c (kMenuSelect): Prevented keyboard event "0"
	(used for motion keys) from being claimed

	* src/sound/soundserver_null.c (sound_null_server): Fixed bug where
	the sound server would read over the end of a song, added additional
	checks.

	* src/core/kmenu.c: Implemented the credits. Now I'll have to decide
	who gets mentioned where and how often. Great. Just great.

1999-12-18  Dmitry Jemerov  <yole@nnz.ru>

	* src/tools/scidisasm.c: New parameter --gamedir to specify directory
	to load resources from.

        * src/tools/sciunpack.c: Ditto.

	* src/core/script.h, src/core/script.c: New opcode parameter types
	Script_Local and Script_Temp.
	* Updated references accordingly.

	* src/include/uinput.h: Updated keycodes of special keys to match
	actual DOS keycodes. Now the buttons in KQ1 intro screen work.
	Hopefully nothing else is broken.

	* src/include/uinput.h, src/graphics/input.c (map_keyboard_event):
	New function.

	* src/core/kgraphics.c (kEditControl): Updated and cleaned up
	to use map_keyboard_event and support word-sized keycodes. Now
	shifted number keys (!@#$ and so on) work correctly.

	* src/core/scriptdebug.c (script_debug): The onscreen console can
	now be hidden correctly.

	* src/graphics/con_io.c (con_input): Updated and cleaned up
	to use map_keyboard_event. Support for keys Space, Home, End.

	* src/graphics/graphics_ddraw.c (WndProc): Support for keys - and
	=.

	* src/graphics/graphics_ddraw.c (add_key_event): Left and right
	Shift keys are now distinguished under Windows NT.

1999-12-17  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kfile.c (kGetSaveFiles): Implemented GetSaveFiles().

	* src/core/kernel.c (kSetDebug): Wrote short implementation for
	SetDebug(), made FlushResources() NOP without warning (we don't need
	it, since all resources are available after load time).

	* src/core/kstring.c (kSetSynonyms): Implemented SetSynonyms() and
	updated related data structures and functions

	* src/core/kfile.c (kCheckFreeSpace): Implemented CheckFreeSpace()

1999-12-17  Dmitry Jemerov  <yole@nnz.ru>

	* src/core/script.h, src/core/script.c: New opcode parameter type
	Script_Param.
	* Updated references accordingly.

	* src/tools/scidisasm.c: Fixed two major bugs. Function parameters
	are printed as param_<number>.

1999-12-15  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/graphics/con_io.c (con_input): Fixed cursor key handling.
	It's possible again to scroll back using Shift-PgUp.

	* src/graphics/engine_graphics.c (graph_draw_selector_edit): Fixed
	the cursor being overdrawn by the character it was supposed to
	highlight.

	* src/graphics/font.c: Fixed CR being drawn. Not me, the special
	character.

	* src/sound/sound.c: Implemented sound event queues (doubly-linked
	dynamic lists) and a "query next event mechanism" to prevent SIGPIPEs.

	* src/graphics/input_ggi.c (_sci_ggi_input_handler): Fixed ggi input
	handler bug that would interpret '0' as INS.

	* src/console: Killed the console subdirectory and distributed the
	sources in src/core and src/graphics. The console design is a bit
	cleaner now.

1999-12-15  Dmitry Jemerov  <yole@nnz.ru>

	* src/core/vocab_debug.c, src/include/vocabulary.h
	(vocabulary_get_snames): New parameter pcount.
	* Updated references to this function accordingly.

	* src/tools/scidisasm.c: Disassembly improvements. Printing of
	selector names pushed by pushi, object names and said strings
	referred to by lofsa/lofss. Global variable references are printed
	as global_<number>. Changed format of opcode size display and made
	it optional. Jump label generation. Display of some additional
	information made optional. Support of older script header format.
	And more...

	* src/core/script.c, src/include/script.h: New opcode type
	Script_Global.
	* Updated references to opcode table accordingly.

1999-12-13  Dmitry Jemerov  <yole@nnz.ru>

	* src/core/script.c, src/include/script.h, src/include/vm.h: Moved
	obsolete object handling code to old_objects.c and old_objects.h.

	* src/tools/scidisasm.c: New standalone SCI script disassembler.

	* src/core/vm.c: Fixed breakpoint system broken by the new
	call/send stack implementation.

	* src/core/vm.c, src/core/scriptdebug.c: New breakpoint type bpe -
	break on exported function.

1999-12-13  Lars Skovlund  <lskovlun@image.dk>

	* src/graphics/engine_graphics.c (graph_draw_selector_control):
	Fixed selector control positioning

1999-12-12  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kmenu.c (kMenuSelect): Added graphical menus

	* src/core/kmenu.c (kMenuSelect): Added debug code, fixed minor bugs

	* src/graphics/input_ggi.c (_sci_ggi_input_handler): Added ggi
	Function key handling

	* src/graphics/menubar.c: Fixed several veteran bugs in the menu
	initialization, including one that tried to lowercase function keys

1999-12-12  Lars Skovlund  <lskovlun@image.dk>

	* src/graphics/menubar.c (menubar_add_menu): Added tag value support

1999-12-12  Dmitry Jemerov  <yole@nnz.ru>

	* src/core/kfile.c (kDeviceInfo_Win32): Correct Win32
	implementation.

	* src/main.c (main): Specifying game name in the command line
	didn't work; freesci aborted immediately. Fixed.

	* src/graphics/graphics_ddraw.c (WndProc): The freesci window is
	now repainted after being uncovered by another window.

	* src/graphics/menubar.c (menubar_add_menu): Fixed major bug
	causing incorrect menu construction.

1999-12-11  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kmenu.c (kGetMenu): Added GetMenu().

	* src/include/kernel.h: Restructured the kernel by splitting it up
	into one header and several source files.

1999-12-10  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/vm.c (send_selector): Fixed a stale pointer bug related to
	the execution stack

	* src/core/scriptdebug.c (c_viewinfo): Added 'viewinfo' debug command

1999-12-09  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/config.l (_parse_color_mode): Fixed braindead strcasecmp() bug.

	* src/main.c (main): Added fix for sciv -gfoo bug from Rink Springer.

1999-12-08  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/vocab_debug.c (vocabulary_get_knames0): Terminated knames
	list.

1999-12-07  Lars Skovlund  <lskovlun@image.dk>

	* src/sound/sound.c: Added handling of NULL handle property

1999-12-06  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c: Added HiliteControl()

	* src/graphics/font.c (text_draw): Made the font drawing functions
	draw the font with background

	* src/graphics/engine_graphics.c (graph_draw_selector_button):
	Cleared background before drawing buttons

	* src/core/kernel.c: Fixed a possible division by zero in the
	bresenham code

1999-12-05  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c (kDeviceInfo_Unix): Added DeviceInfo for UNIX-
	like systems (and a preliminary, incomplete version for Win32).

	*src/core/*.c : Replaced alloc functions with g_alloc functions

1999-12-02  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/main.c: Fixed char_gets_input() to handle fgets() being
	interrupted by signals intercepted by GGI under Solaris.

	* src/graphics/engine_graphics.c (graph_draw_selector_edit): Fixed
	bug that might cause the wrong font to be used for the highlighted
	letter in an "edit control".

	* src/graphics/input_ggi.c (_sci_ggi_input_handler): Fixed
	handling of CTRL keys

	* src/core/scriptdebug.c (script_debug): Removed the number of
	console redraws, fixed "repeat last entry" behaviour

	* src/console/console.c: (consoleInput): Lower-cased all control
	letters in order to re-enable CTRL keycodes for the onscreen console

1999-12-01  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c (kDrawCel): Function fixed to behave correctly
	if called with incorrect loops/cels.

1999-11-28  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c (kAddToPic): Now handles NULL lists.

	* src/core/vm.c (run_vm): Changed behaviour of send-like functions
	to accomodate for realloc() moving the execution stack.

	* src/graphics/engine_graphics.c (graph_update_box): Added range
	checks.

	* acinclude.m4 (AC_C_PARAMETRIZED_BIGENDIAN): Added support for
	"forced" endianness setting, for cross-compiling.

	* src/core/savegame.cfsml, src/main.c, configure.in: Tried to patch
	headers to make things more portable for non-POSIX systems.

1999-11-27  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c (_k_view_list_dispose_loop): Fixed the bug
	(more like a missing feature) that caused the game to run out of
	background buffers. At least I hope so.
	(kFormat): Fixed the %c formatting bug that would cause a % to be
	printed instead of the character immediately following the %c.
	(kBaseSetter): BaseSetter now takes view offsets into consideration.
	This doesn't affect SQ3, but might help with other games.

	* src/include/engine.h (_state): Made sure that &rest is saved
	correctly (this only helps with debugging, of course).

	* acinclude.m4: Improved (?) the config maker scripts. Now,
	instead of checking libraries by looking for files with corresponding
	names, png, (n)curses and ggi are tried to link against; this should
	help with cross-compiling.

1999-11-26  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/graphics/graphics_ggi.c (libggi_redraw): Fixed GGI screen
	shaking.

	* src/core/kernel.c (kBaseSetter): Fixed the SQ3 bug where entering
	the red starship tube would throw you back one screen to the left.

1999-11-26  Dmitry Jemerov  <yole@nnz.ru>

	* src/include/kdebug.h: Moved sci_debug_flags definition to kdebug.h
	from scriptdebug.c.
	* src/core/kernel.c: Support for new debug flag "break on
	warnings" (0x02).

	* src/core/kernel.c (kAnimate): Fixed attempt to free the
	dyn_views list twice.

	* config.l: conf.console_log is now allocated by strdup, to avoid
	attempt to free the same buffer multiple times.

	* src/core/scriptdebug.c (disassemble): When disassembling the jmp
        instruction, the destination offset is also printed.

1999-11-26  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/console/console.c (sciprintf): Fixed sciprintf for result
	strings longer than 255 bytes (the problem was caused by a difference
	in vsnprintf behaviour between older glibc versions and glibc 2.1/
	other libcs)

	* src/core/kernel.c: Killed the bug that made QfG1 stop with the
 	PC set to 0 in the main menu sometimes. It was caused by the dynamic
	view lists not being cleared automatically during DrawPic...

1999-11-25  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c (_k_make_view_list): Potential fix for the
	Attack Of The 15' Killer Woman bug in Iceman. One of our better
	ones; it'd be almost sad to loose that one ;->

1999-11-25  Rink Springer <rink@rink.cx>

        * src/core/vocab_debug.c (vocabulary_get_opcodes): Added check for NULL
          return of findResource () to avoid segmentation fault in scriptdump

1999-11-25  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/scriptdebug.c (script_debug): Added functions to the
	sound driver protocol to support suspending (and, afterwards,
	resuming) all sound. Used this to prevent most causes of sound
	server deaths by SIGPIPEs.

1999-11-22  Lars Skovlund <lskovlun@worldonline.dk>

	* src/core/kernel.c (kDisplay): Fixed a bug in kDisplay which was the
	  cause for the "blue buttons" in QFG1 (ports must be preserved across
	  kernel calls!)

1999-11-21  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/vocab.c (vocab_get_suffices): Fixed suffix reading, which
	simply didn't work (thanks to Rink Springer for pointing this out!)

1999-11-20  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/main.c (main): Fixed a cause for segfaults that would strike
	if sciv was started without a game name to use

1999-11-18  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c (kDoBresen): Killed another bresenham bug

1999-11-17  Lars Skovlund <lskovlun@worldonline.dk>

	* src/core/kernel.c: Killed the "keep on walking" bug

1999-11-15  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c (kParse): Updated parser to call wordFail correctly
	(invoke_selector): Fixed a bug that could make kernel functions in the
	backtrace list look strange, and another one that would write incorrect
	parameters if invoke_selector was called with more than zero of them
	(caused by a macro evaluating va_arg() twice).

1999-11-14  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/sound/sfx_save.cfsml: Implemented persistance for the sound
	subsystem. Sound data is written to "(savedir)/sound" as plain text,
	while songs are dumped binarily into "(savedir)/song.*".

	* src/core/cfsml.pl: Changed all fucntion declarations to static;
	this should help with programs using CFSML generated code in more than
	one place.

1999-11-14  Dmitry Jemerov  <yole@exch.nnz.spb.su>

	* Fixed Visual C++ build problems all around the code.

	* src/graphics/engine_graphics.c (graph_draw_selector_edit):
	Fixed memory corruption that occurred when a 0 length string was
	passed in the text parameter. Fixed drawing cursor not in the
	end of text string.

	* src/core/kernel.c (kOnControl): Fixed several keyboard handling
	problems.

	* src/graphics/graphics_ddraw.c (WndProc): The tilde key is now
	handled correctly.

	* src/graphics/graphics_ddraw.c (ddraw_init): Fixed window style.


1999-11-12  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/cfsml.pl: Fixed a bug that would cause the number of
	array elements to be too low by one if MAXWRITE was used.

	* src/core/kernel.c (kShakeScreen): Implemented ShakeScreen. The
	gfx_driver->Redraw protocol was extended to allow y parameters for
	this- this means that gfx drivers w/o shakescreen don't need to
	worry about this feature.

	* src/core/savegame.cfsml : Implemented saving/restoring the game
	state. Everything seems to save and restore cleanly, except for the
	sound driver (saving/restoring still needs to be implemented there).

1999-11-07  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/config.l (config_init): Added another config option,
	"resource_dir", to the config file parser. This makes it possible
	to run a game with a command like "sciv lsl2".

1999-10-20  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/vm.c (run_vm): Re-implemented parts of the vm so that
	a new vm is only started from kernel functions. The program stack
	is now stored on a local stack (again, except for calls into user
	space from kernel functions) which should make it possible to store
	and load the game state under most conditions.

1999-10-15  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/vocab_debug.c (vocabulary_get_knames0): Added handling for
	missing vocab.999 (falls back to a default kernel name table)

	* src/graphics/graphics_ggi.c (graphics_draw_region_ggi): Added a hack
	for bigendian machines that could solve the blank screen problem
	without too much performance loss (still needs to be tested)

	* src/sound/soundserver_null.c: Removed warnings

1999-09-04  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c: Fixed numerous bugs

1999-08-31  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/vocab.c: Implemented basic support for the standard and
	suffixed vocabulary

	* src/core/kernel.c (kEditControl): Fixed some bugs in this function

1999-08-29  Dmitry Jemerov  <yole@exch.nnz.spb.su>

        * src/core/vm.c: Breakpoints on object methods do not trigger on
        super calls.

        * src/core/scriptdebug.c (c_backtrace): Super calls are now
        shown correctly in the back trace.
        (c_stepover, script_debug) New debugger command 'so' to step over
        sends and calls.
        (c_disasm) disasm command always printed one more command than
        requested. Now disasm stops after a 'ret' is encountered instead
        of printing a series of bnot's. If the first argument of disasm
        is less or equal than 0, it is treated as an offset from pc.
        (c_bpdel, script_debug) New debugger command 'bpdel' to delete
        breakpoints.

        * src/config.l: Brought back the debug_mode parameter.

        * src/graphics/graphics_ddraw.c (WndProc): Mouse cursor is redrawn
        during waits. Windows mouse cursor is not shown over the freesci
        window.

1999-08-28  Dmitry Jemerov  <yole@exch.nnz.spb.su>

        * src/core/scriptdebug.c (c_snk): Now it's possible to specify
        not only function name, but also function index as snk parameter.

        * src/include/vm.h, src/include/engine.h, src/core/scriptdebug.c,
        src/core/vm.c: Added breakpoint support.

        * src/core/kernel.c (kScriptID): Fixed a long-standing bug in
        GetScriptID that was masked by an ugly patch: The dispatch table
        index is 0-based, not 1-based. That fixes the EgoWaterViewer
        problem in Codename: Iceman. (kEditControl): Event modifiers are
        handled correctly. (kGetEvent) removed "stub" mark.

        * src/graphics/graphics_ddraw.c: Added support for Caps Lock,
        Num Lock and keypad keys. Again fixed to work with Magnus'
        latest changes.

1999-08-26  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/sound/soundserver_null.c: Added support for sound command 0xc
	(assumed to be "Stop All") to both ends of the pipes.

	* src/sound/sound.c (song_lib_remove): Fixed one more evil bug that
	caused circular references.

	* src/sound/soundserver_null.c (sound_null_server): Removed a possible
	segfault reason for the null sound server.

	* src/core/kernel.c: Improved (fixed?) priority mapping

	* src/sound/soundserver_null.c (sound_null_server): Changed
	cues according to Ravi's directions

	* src/core/kernel.c (kEditControl): Edit preliminary EditControl.
	(kGraph): Implemented FILL_BOX_ANY and UPDATE_BOX

1999-08-26  Dmitry Jemerov  <yole@exch.nnz.spb.su>
        * src/core/kernel.c (kFOpen) using UPARAM(0) instead of
        PARAM(0) (fixes a crash in LSL3). (kOnControl) now supports
        calling with 2 or 4 parameters (as it had in PQ2 - fixes
        a crash with it). (kIsObject) fixed another problem with
        PQ2.
        * src/core/scriptdebug.c (disassemble): Heap offsets are
        now printed for each disassembled command.

1999-08-25  Dmitry Jemerov  <yole@exch.nnz.spb.su>
        * src/main.c (main): Added support for command line options.
        Added options --gamedir (-d), --run (-r), --sci-version (-v).
        * src/*/graphics*.*, kernel/kernel.c, kernel/resource.c:
        Converted sci_usleep() to a graphics driver-specific function
        (gfx_driver.Wait()).
        * src/core/kernel.c, src/include/kdebug.h: SCIkdebug/SCIkwarn
        output is also echoed to console_log file. Added new debug
        message category, SCIkGFXDRIVER. Moved debugging function
        prototypes to the header file.
        * src/core/scriptdebug.c: Added support for SCIkGFXDRIVER to
        c_debuglog(). Moved part of c_debuglog() to a separate function
        set_debug_mode().
        * src/graphics/graphics_ddraw.c: Converted all debugging output
        to SCIkdebug/SCIkwarn. Added support for fullscreen mode. Added
        event processing code.
        * src/include/sci_conf.h, src/main.c, src/config.l: Added
        debug_mode parameter.
        * src/tools/vocabdump.c: now prints selector indexes; added
        printing of class table.
        * src/core/script.c (printMethod): when disassembling the
        <class> opcode, the correct class name is printed.
        * src/include/versions.h, src/core/vm.c: Added support
        (version-dependent) for 4 byte script headers.

1999-08-23  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c (kDoSound): Added sound debugging.
	(kLocalToGlobal): Implemented kLocalToGlobal, kGlobalToLocal.

1999-08-23  Dmitry Jemerov  <yole@exch.nnz.spb.su>

        * core/kernel.c: implemented Win32 replacement for the ffs
        function
	* graphics/engine_graphics.c (graph_update_box): fixed coordinate
        adjustment problem causing a crash in the LSL3 intro
        * tools/vocabdump.c: vocabdump now prints kernel function indexes;
        added missing vocabulary_free_snames()
        * console/commands.c, core/script.c: moved code of c_dissectscript()
        into a separate function script_dissect(); moved sci_hexdump()
        to script.c. Implemented dumping of string blocks in more human
        readable way.
        * include/console.h, console/console.c (sciprintf): added
        possibility of echoing sciprintf() output to a text file
        * tools/sciunpack.c: Added --dissect flag allowing to dump script
        resources to human readable text. Added possibility to specify
        "*" instead of resource number to unpack all resources of given
        type.
        * config.l, include/graphics.h, include/graphics_ddraw.h,
        graphics/graphics_ddraw.c, graphics/graphics_ggi.c:
        Implemented driver-specific configuration parameters.
        * include/graphics.h, graphics/graphics_ddraw.c,
        graphics/graphics_ggi.c: Copied new color interpolation code
        from the libggi driver to the DirectDraw driver.
        * config.l, main.c: Implemented console_log config parameter
        specifying the file to which console output should be echoed.
        * main.c: Added myself to the copyrights. :-)

1999-08-20  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c (kInitBresen): Fixed a bug in the bresenham
	implementation.

1999-08-19  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c: Fixed CanBeHere() according to Lars' specs.
	Implemented DirLoop, CoordPri, PriCoord, ValidPath, RespondsTo,
	FOpen, FPuts, FGets, FClose, TimesSin/SinMult, TimesCos/CosMult.
	Fixed a stupid bug in CanBeHere() where an object could clip
	against itself.

1999-08-17  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c (kDrawCel): Added DrawCel.

	* src/main.c: Added support for a config file (the parser can be
	generated from the flex file config.l).

	* src/core/kernel.c: Fixed countless bugs, implemented numerous kernel
	functions. It's been a while since I last updated this file, so I'm
	unable to go into any more detail. The last functions I added were
	InitBresen, DoBresen, CanBeHere.

1999-08-09  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c (kFormat): Fixed kFormat according to Lars'
	specs.

1999-08-05  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/graphics/engine_graphics.c: Added a new file for some fancy
	thinge like backupping (up-backing?) and restoring parts of the screen
	maps and text rendering.

	* src/core/kernel.c (kAnimate): Added Animate(), Display(), partial
	Graph().

1999-08-03  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/graphics/graphics.c (drawView0): Fixed a bug that would over-
	write the port border (and mess up a lot of other things).
	Threadsafed the whole graphics stuff.

1999-08-02  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/scriptdebug.c (c_sret): Successfully tested the new sret
	debug command (Step until RETurning from current level) which is simi-
	larly useful as the Sierra SCI TAB key (skip send), but works the
	way around (i.e. it doesn't skip the next function, it waits until the
	current function terminates).

	* src/core/kernel.c (kClone): Fixed a bug where cloning would corrupt
	the heap

	* src/core/vm.c (execute): Fixed a bug where the 'super' operation
	would start execution with the base object set to the superclass
	of the calling object as opposed to the calling object itself
	(QfG1, step 1072 / Glory::startRoom)
	(execute): Fixed two bugs with indexed variable operations (like
	sali, sspi or +agi) where the accumulator wasn't bit-expanded as
	neccessary and where + and - operations wrote back to the wrong ad-
	dress.

	* src/core/kernel.c: Added Clone, DisposeClone, ScriptID

	* src/core/scriptdebug.c (c_listclones): Added listclones debug
	function to list all clones

	* src/console/commands.c (c_dissectscript): Fixed a bug that would
	read too far, possibly causing a segfault with efence

1999-07-30  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c: Added OnControl and a few trivial functions
	(Random, Abs, Sqrt, HaveMouse, GetAngle, GetDistance)

1999-07-29  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c: Fixed Load, Unload, added PicNotValid and Show.

1999-07-27  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/vm.c (execute_method): Fixed calle/callb madness and some
	other bugs.

1999-07-25  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/kernel.c: Added new kernel functions.

	* src/core/vm.c (execute): Fixed a bunch of bugs and added dynamic
	class loading to the class opcode.

1999-07-23  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/vm.c (script_run): Finished the VM. In Theory.

1999-07-18  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/core/vocabulary.c (vocabulary_get_snames): Tracked down a
	nasty little bug in name getting. This one was so simple that it
	was a killer- it's possible that it was at least part of the
	cause for the memory corruption which haunted us in our sleeps.

1999-07-11  Christoph Reichenbach  <jameson@linuxgames.com>

	* src/graphics/graphics.c (drawView0): Views appear to clip correctly
	to ports and windows now.

	* src/graphics/window.c (drawWindow): Implemented SCI0-style text boxes
	with the usual headers. Still needs to be tested, but it looks adequate
	for the time being. Still, one port-related clipping bugs will have to
	be squashed now.

	* src/sound/midi.c: Thanks to Shane T., the quality of instrument
	mapping should have improved now (the PQ2 instrument mappings were
	very helpful).
	Unmapped instruments now are ignored when generating the MIDI data,
	instead of being mapped to a wrong instrument.

1999-06-28  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* src/console/commands.c (c_hexgrep): Added a function for non-regexp
	grepping for particular hex sequences. Also added a new parameter type
	for bytes in hexadecimal representation and changed the '*' parameter
	type to repeat the last param type 0 or more types.
	(c_list): Fixed another braindead bug reported by Chris Lansdown.

1999-06-27  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* src/core/resource.c (loadResourcePatches): Added loading of
	resource patches (can be overridden when calling loadResources())

	* src/core/heap.c: Added Magnus' implementation of the SCI heap.
	Still needs to be hooked up to libscicore.

	* Accidently killed some files. Entries to the changelog have been
	lost; here's a quick summary:

	* Applied fixes from Magnus for the VM/Vocab/Script stuff

	* Applied fixes from Chris Lansdown for configure.in and resource.c

	* Forced tools/console.c to use libreadline instead of libgii.
	This still needs to be checked for, so that we can evade to gets()
	if readline is not available.

	* Fixed cursor drawing for SCI0 based on Chris Lansdown's hints

	* Modified graphics code to allow for multilayered pictures (like
	the SQ3 title screen, which consists of the "Space Quest 3" logo
	and the "the Pirates of Pestulon" thing, which is a separate pic
	resource)

	* Renamed picture resources to pic resources for Resource_Types;
	this is because SCI0 calls them pics and not pictures.

1999-06-18  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* configure.in: Uses AM_PATH_GLIB now instead of the home-made
	AC_PATH_GLIB.

	* src/tools/sciunpack.c (main): Unpacking behaviour now equals Carl
	Muckenhoupt's SCI decoder's behaviour, i.e. it writes an SCI header
	before the SCI data block. This means that the resulting files can
	be directly used as patches.

	* src/core/decompress1.c (decompress1): Thanks to a hint from Ravi
	at the SCI message board, decompression now works for all SCI01
	resources. This means that QfG2 will, in theory, should be supported
	for the public release (without sound support, however).

1999-06-14  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* src/core/vocabulary.c (_vocabulary_get_knames0alt): Added a new
	function to deal with non-standard vocab.999 resources.

1999-06-13  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* src/graphics/graphics.c (clearpage): Changed default background
	color to 15, which fixes several problems and is consistant with the
	way Sierra used to do things (TWSUTDT).

1999-06-12  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* src/sound/midi.c: Added MIDI mapping magic. It's still not perfect,
	but much better (and more extensible) than the previous solution.

1999-06-10  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* src/graphics/mcursor.c: Fixed both cursor drawing functions to
	properly clip. SCI1 cursors are now displayed correctly, too (tested
	this with a small hack that allowed loading the QG2 resources without
	decompressing picture resources)

1999-06-09  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* src/graphics/graphics_ggi.c (initColors): Fixed a small bug that
	would prevent color 0xff to be set correctly in 256 color mode.

1999-06-08  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* Decided to release 0.2.0. The actual release date will proabably be
	tomorrow, though.

	* src/tools/console.c: Added a text-based command console. It doesn't
	work the way it's supposed to, though- libgii(stdin) appears to
	deliver events in a different fashion than libggi does.

	* src/console/console.c: A number of commands has been added to the
	command console in the last few days. While the command console
	doesn't beat the bash (yet ;-), it's in a state where working with it
	is possible. As long as working is limited to inspecting and frobbing
	valies, and calling some pre-defined commands.

1999-06-07  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* src/sound/sound.c: Fixed a bug when setting the gsi volume (the
	request would be prepared but not flushed).

1999-06-06  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* src/console/console.c: Finished the first phase of work on the
	command console. It should now be possible to hook up commands to
	it.

1999-06-05  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* src/graphics/input_ggi.c: Completed (?) work on the ggi input
	driver.

1999-06-04  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* src/include/uinput.h: Added an input interface of sorts. It's
	supposed to be portable to non-ggi interfaces, but I'm not sure if
	it will work for all of them. Well, making things as portable and
	universal as possible is one of the design goals, so I should try
	to look for any possible alternatives and include some way to use
	them.
	I'll get back to this right after I finish my research on the cure
 	for cancer and the TransWarp drive.

	* src/graphics/graphics_ggi.c (displayPicture): After noticing the
	significant lack of redraw speed in some preliminary input tests, I
	redid the display code, using ggiPutHLine(). The resulting speedup
	was considerable. Also made displayPicture() autodetect if the visual
	is double-sized, so displayDoublePicture() won't be necessary in the
	future.

1999-06-02  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* Merged Magnus' patches to the vocab and script resource handlers.
	Now this rocks- both vocab and script dumping appear to work without
	any problems!

	* src/graphics/mcursor.c (drawMouseCursor0): Added a drawing function
	for SCI0 mouse cursors.

1999-05-29  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* src/graphics/graphics.c: Added support for 'interpolated mode' when
	drawing the graphics. Both graphics_ggi.c and graphics_png.c have been
	updated to support this.

	* src/core/resource.c (loadResources): Fixed a nasty but stupid bug
	that made the last release unuseable.

1999-05-24  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* src/sound/sound.c: Added some general functions to ease interfacing
	with different sound systems (currently, only GSI is supported).

	* src/graphics/graphics_png.c: Added support for picture_ts to be
	stored as .png files. Practical use for this is limited, though.

	* src/tools/sciunpack.c (main): Created sciunpack to merge unpack and
	resourcelist. This tool includes functions for converting sound
	and picture resources to midi and png files, respectively.

	* Changed several function names to improve clarity. All functions
	succeeded by a zero are only applicable to SCI0 resources.

1999-05-23  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* src/sound/midi.c (makeMIDI0): Preliminary MIDI support has been
	added. However, Sierra appears to use a proprietary MIDI instrument
	mapping scheme (which comes at no surprise; AFAIK the GM specification
	wasn't comissioned until somewhen in 199x), and therefore the
	instruments (including percussions) appear to be somewhat messy.
	Fixing this instrument mapping will be an ongoing task.

1999-05-13  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* src/graphics/graphics.c (drawView): Performance of drawView() has
	been improved. It's not perfect yet (even if color==transparency,
	each pixel is checked), but it should be *much* better than its
	predecessor.
	Also, I think that I found the "reversed" flag which some of the
	views apparently use to draw the same data in two different ways.

	* Fixed several endianness bugs (mainly in font.c and graphics.c).
	qg1demo now runs on sparc-solaris 2.5, although the colors are messed
	up.

	* src/core/resource.c (loadResources): Allowed resource.000 not to
	exist (loading starts at resource.001 in this case). This situation
	can be found in SQ3.

	* src/core/decompress.c (decompress): Added check for objects with
	size zero to avoid segfault.

1999-05-10  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* configure.in : Added support for passing the location of ggi
	during configure time.

1999-05-09  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* src/graphics/graphics.c (main): Fixed a bug with transparency:
	contrary to my prior expectations, all sprites DO carry a trans-
	parency value. Also made the line and fill functions behave more
	like the original. So far, I've had no problems with lines, but
	filling still gives me headaches.

1999-05-08  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* Improved error handling for the resource loader and parts of the
	decompression stuff.

	* Moved all of the (u)int* types to g(u)int*, which are exported by
	glib.

1999-05-05  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* Released 0.1.1

	* Kicked autoconf and automake until they would tell me the byte
	sizes of the various data types. Together with Magnus' machine-
	independent getInt (now called getInt16) the new data types should
	greatly improve portability.

	* Merged Magnus' script and vocabulary resource code into the
	distribution. Wrote some small testing utilities for them.

1999-04-03  Christoph Reichenbach  <creichen@rbg.informatik.tu-darmstadt.de>

	* First public release.


